{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "legacyDecorators": true
    },
    "ecmaVersion": 2021,
    "sourceType": "module"
  },

  "extends": [
    "eslint:recommended",
    "prettier",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],

  "plugins": ["@typescript-eslint", "prettier", "react", "react-hooks"],

  "settings": {
    "react": {
      "version": "detect"
    }
  },

  "env": {
    "browser": true,
    "node": true
  },

  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parserOptions": {
        "project": true
      },
      "extends": ["plugin:@typescript-eslint/recommended-type-checked"],
      "rules": {
        "@typescript-eslint/no-base-to-string": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          { "vars": "all", "args": "none", "varsIgnorePattern": "^_" }
        ],
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/unbound-method": "off"
      }
    },
    {
      "files": ["client/**/*"],
      "env": {
        "browser": true,
        "commonjs": true,
        "node": false
      }
    },
    {
      "files": [
        "**/*.test.js",
        "**/*.test.ts",
        "**/*.test.tsx",
        "**/testing/*",
        "jest-client-setup.ts"
      ],
      "extends": ["plugin:jest/recommended", "plugin:jest/style"],
      "env": {
        "browser": true,
        "jest/globals": true,
        "node": true
      },
      "plugins": ["jest"],
      "rules": {
        "jest/expect-expect": 0
      }
    }
  ],

  "globals": {
    "document": "readonly",
    "navigator": "readonly",
    "window": "readonly",
    "IS_ELECTRON": "readonly",
    "__WEBPACK_ENV": "readonly"
  },

  "rules": {
    "accessor-pairs": "error",
    "camelcase": ["error", { "allow": [".+_.+Fragment$"] }],
    "consistent-return": "error",
    "constructor-super": "error",
    "curly": ["error", "multi-line"],
    "dot-notation": "error",
    "eol-last": "error",
    "eqeqeq": ["error", "smart"],
    "linebreak-style": ["error", "unix"],
    "max-len": ["error", 100],
    "max-nested-callbacks": ["error", 5],
    "max-params": ["error", 8],
    "new-parens": "error",
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-caller": "error",
    "no-constant-condition": "off",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-semi": "off",
    "no-fallthrough": ["error", { "allowEmptyCase": true }],
    "no-floating-decimal": "error",
    "no-implied-eval": "error",
    "no-inner-declarations": ["error", "both"],
    "no-label-var": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-multi-str": "error",
    "no-multiple-empty-lines": ["error", { "max": 2 }],
    "no-nested-ternary": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-octal-escape": "error",
    "no-proto": "error",
    "no-restricted-globals": [
      "error",
      {
        "name": "fetch",
        "message": "Do not use the built-in fetch, use client/network/fetch instead."
      }
    ],
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "react-redux",
            "importNames": ["useDispatch", "useSelector"],
            "message": "Use useAppDispatch and useAppSelector from ./client/redux-hooks instead."
          },
          {
            "name": "type-fest",
            "importNames": ["Jsonify"],
            "message": "Use Jsonify from ./common/json instead."
          },
          {
            "name": "electron",
            "importNames": ["ipcMain", "ipcRenderer"],
            "message": "Use ./common/ipc instead."
          }
        ]
      }
    ],
    "no-return-assign": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-undef": "off",
    "no-undef-init": "error",
    "no-unneeded-ternary": "error",
    "no-unused-expressions": ["error", { "allowTaggedTemplates": true }],
    "no-unused-vars": "off",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": [
      "error",
      { "terms": ["fixme", "do not submit", "xxx"], "location": "start" }
    ],
    "object-shorthand": "error",
    "padded-blocks": ["error", "never"],
    "prefer-const": "error",
    "quote-props": ["error", "as-needed"],
    "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": true }],
    "semi": ["error", "never"],
    "spaced-comment": [
      "error",
      "always",
      { "markers": ["global", "globals", "eslint", "eslint-disable", "*package", "!", ",", "/"] }
    ],
    "wrap-iife": ["error", "any"],

    "prettier/prettier": "error",

    "react/display-name": "off",
    "react/jsx-boolean-value": ["error", "always"],
    "react/no-deprecated": "off",
    "react/jsx-no-target-blank": ["error", { "allowReferrer": true }],
    "react/no-unescaped-entities": "off",
    "react/prop-types": "off",

    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-redeclare": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "vars": "all", "args": "none", "varsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-var-requires": "off"
  }
}
